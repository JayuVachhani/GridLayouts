*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    height: 90vh;
    display: flex;
    justify-content: center;
    align-items: center;
}
.container{
    
    background-color:sandybrown;
    width: 60%;    
    display: grid;
        /* repeat() : it will take number of columns to repeat size of items (same with rows) */
        /* if we use px then we have to give manual size.*/
        /* Note : if size of the item not match with container size then it will display remaining space of container */

    /* grid-template-columns: repeat(3,200px); */

    /* to fix this we are using fractional (fr) */
    /* it will set all the items in container with equal space and responsive also */
    grid-template-columns: repeat(3,1fr);
    /* grid-template-columns: repeat(3,1fr) 1fr; */
    /* grid-template-columns: 1fr 2fr 1fr;       etc*/ 
    
    /* same with the gap (i.e. px scenario) */
    /* if we use fr then it will automatic adjust all items with gap */
    gap: 20px;
    
}
.item{
color:white;
height: 150px;
}
.item-1{
    color: red;
    font-size: 20px;
    grid-row-start: 3;
    background-color: rgb(85, 107, 47);
}
.item-2{
    background-color: rgb(64, 83, 31);
}
.item-3{
    background-color: rgb(138, 175, 73);
}
.item-4{
    color: red;
    font-size: 20px;
    grid-row-start: 2;
    grid-row-end: 4;
    grid-column-start: 2;
    grid-column-end: 3;
    /* it will work same as above */
    /* grid-area : grid-row-start / grid-column-start / grid-row-end / grid-column-end */
    /* grid-area : 2/2/4/3 */
    background-color: rgb(154, 180, 108);
}
.item-5{
    background-color: rgb(63, 75, 43);
}
.item-6{
    background-color: rgb(175, 233, 75);
}
.item-7{
    background-color: rgb(88, 128, 20);
}
.item-8{
    background-color: rgb(165, 243, 30);
}
.item-9{
    color: red;
    font-size: 20px;
    grid-row: 3;
    grid-column: 2/3;
    background-color: rgb(44, 66, 6);
}